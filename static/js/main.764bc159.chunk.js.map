{"version":3,"sources":["components/StyledButton.tsx","components/Pad.tsx","components/App.tsx","index.tsx"],"names":["StyledButton","props","col","variant","id","value","onClick","Col","className","Button","block","defaultProps","Pad","onNumberButtonClick","onOperatorButtonClick","onDecimalButtonClick","onClearButtonClick","Container","fluid","Row","App","useState","display","setDisplay","hasOperator","setHasOperator","operator","setOperator","isMinus","setIsMinus","result","setResult","Card","Body","style","fontSize","inputNumber","newDisplay","toString","inOperator","displayNumber","Number","inputOperator","newOperator","num","newResult","calculate","indexOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.764bc159.chunk.js","sourcesContent":["// eslint-disable-next-line no-use-before-define\nimport React from 'react';\nimport { Col, Button } from 'react-bootstrap';\n\ntype Props = {\n  col?: string;\n  variant?: string;\n  id: string;\n  value: string;\n  onClick: () => void;\n};\n\nconst StyledButton: React.FC<Props> = (props: Props) => {\n  const { col, variant, id, value, onClick } = props;\n  return (\n    <Col className={`col-${col} p-1`}>\n      <Button variant={variant} id={id} block onClick={() => onClick()}>\n        {value}\n      </Button>\n    </Col>\n  );\n};\n\nStyledButton.defaultProps = {\n  col: '3',\n  variant: 'primary',\n};\n\nexport default StyledButton;\n","// eslint-disable-next-line no-use-before-define\nimport React from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport StyledButton from './StyledButton';\n\ntype Props = {\n  onNumberButtonClick: (num: number) => void;\n  onOperatorButtonClick: (operator: string) => void;\n  onDecimalButtonClick: () => void;\n  onClearButtonClick: () => void;\n};\n\nconst Pad: React.FC<Props> = (props: Props) => {\n  const {\n    onNumberButtonClick,\n    onOperatorButtonClick,\n    onDecimalButtonClick,\n    onClearButtonClick,\n  } = props;\n\n  return (\n    <Container fluid>\n      <Row>\n        <StyledButton\n          id=\"seven\"\n          value=\"7\"\n          onClick={() => {\n            onNumberButtonClick(7);\n          }}\n        />\n        <StyledButton\n          id=\"eight\"\n          value=\"8\"\n          onClick={() => onNumberButtonClick(8)}\n        />\n        <StyledButton\n          id=\"nine\"\n          value=\"9\"\n          onClick={() => onNumberButtonClick(9)}\n        />\n        <StyledButton\n          variant=\"success\"\n          id=\"divide\"\n          value=\"÷\"\n          onClick={() => onOperatorButtonClick('÷')}\n        />\n      </Row>\n      <Row>\n        <StyledButton\n          id=\"four\"\n          value=\"4\"\n          onClick={() => onNumberButtonClick(4)}\n        />\n        <StyledButton\n          id=\"five\"\n          value=\"5\"\n          onClick={() => onNumberButtonClick(5)}\n        />\n        <StyledButton\n          id=\"six\"\n          value=\"6\"\n          onClick={() => onNumberButtonClick(6)}\n        />\n        <StyledButton\n          variant=\"success\"\n          id=\"multiply\"\n          value=\"×\"\n          onClick={() => onOperatorButtonClick('×')}\n        />\n      </Row>\n      <Row>\n        <StyledButton\n          id=\"one\"\n          value=\"1\"\n          onClick={() => onNumberButtonClick(1)}\n        />\n        <StyledButton\n          id=\"two\"\n          value=\"2\"\n          onClick={() => onNumberButtonClick(2)}\n        />\n        <StyledButton\n          id=\"three\"\n          value=\"3\"\n          onClick={() => onNumberButtonClick(3)}\n        />\n        <StyledButton\n          variant=\"success\"\n          id=\"subtract\"\n          value=\"－\"\n          onClick={() => onOperatorButtonClick('－')}\n        />\n      </Row>\n      <Row>\n        <StyledButton\n          id=\"zero\"\n          value=\"0\"\n          onClick={() => onNumberButtonClick(0)}\n        />\n        <StyledButton\n          id=\"decimal\"\n          value=\".\"\n          onClick={() => onDecimalButtonClick()}\n        />\n        <StyledButton\n          variant=\"secondary\"\n          id=\"clear\"\n          value=\"C\"\n          onClick={() => onClearButtonClick()}\n        />\n        <StyledButton\n          variant=\"success\"\n          id=\"add\"\n          value=\"＋\"\n          onClick={() => onOperatorButtonClick('＋')}\n        />\n      </Row>\n      <Row>\n        <StyledButton\n          col=\"12\"\n          variant=\"success\"\n          id=\"equals\"\n          value=\"=\"\n          onClick={() => onOperatorButtonClick('=')}\n        />\n      </Row>\n    </Container>\n  );\n};\n\nexport default Pad;\n","// eslint-disable-next-line no-use-before-define\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport Pad from './Pad';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [display, setDisplay] = useState('0');\n  const [hasOperator, setHasOperator] = useState(false);\n  const [operator, setOperator] = useState('');\n  const [isMinus, setIsMinus] = useState(false);\n  const [result, setResult] = useState(0);\n\n  const onNumberButtonClick = (inputNumber: number) => {\n    let newDisplay = display;\n\n    if (display === '0' && inputNumber === 0) {\n      return;\n    }\n\n    if (hasOperator) {\n      newDisplay = '';\n      setHasOperator(false);\n    }\n\n    if (display === '0') {\n      newDisplay = inputNumber.toString();\n    } else {\n      newDisplay += inputNumber.toString();\n    }\n\n    setDisplay(newDisplay);\n  };\n\n  const onDecimalButtonClick = () => {\n    let newDisplay = '';\n\n    if (hasOperator) {\n      newDisplay = '0.';\n      setHasOperator(false);\n    } else if (display.indexOf('.') === -1) {\n      newDisplay += `${display}.`;\n    } else {\n      return;\n    }\n\n    setDisplay(newDisplay);\n  };\n\n  const calculate = (newOperator: string, displayNumber: number) => {\n    const num = isMinus ? displayNumber * -1 : displayNumber;\n    let newResult = result;\n\n    switch (newOperator) {\n      case '＋':\n        newResult += num;\n        break;\n\n      case '－':\n        newResult -= num;\n        break;\n\n      case '×':\n        newResult *= num;\n        break;\n\n      case '÷':\n        if (num === 0) {\n          return false;\n        }\n        newResult /= num;\n        break;\n\n      default:\n        break;\n    }\n\n    setResult(newResult);\n    setDisplay(newResult.toString());\n    return true;\n  };\n\n  const onOperatorButtonClick = (inOperator: string) => {\n    const displayNumber = Number(display);\n    let inputOperator = inOperator;\n\n    if (operator && !hasOperator) {\n      if (!calculate(operator, displayNumber)) {\n        return;\n      }\n    } else {\n      if (inputOperator === '－' && (operator === '×' || operator === '÷')) {\n        setIsMinus(true);\n        inputOperator = operator;\n      } else {\n        setIsMinus(false);\n      }\n\n      setResult(displayNumber);\n    }\n\n    setOperator(inputOperator);\n    setHasOperator(true);\n  };\n\n  const onClearButtonClick = () => {\n    setDisplay('0');\n    setResult(0);\n    setHasOperator(false);\n    setOperator('');\n    setIsMinus(false);\n  };\n\n  return (\n    <Container fluid className=\"text-center\">\n      <Row>\n        <Col>\n          <h1 className=\"mb-5\">JavaScript Calculator</h1>\n        </Col>\n      </Row>\n      <Container className=\"calculator-wrapper\">\n        <Row>\n          <Col>\n            <Card>\n              <Card.Body\n                id=\"display\"\n                className=\"text-right\"\n                style={{ fontSize: '2rem' }}\n              >\n                {display}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Pad\n          onNumberButtonClick={onNumberButtonClick}\n          onOperatorButtonClick={onOperatorButtonClick}\n          onClearButtonClick={onClearButtonClick}\n          onDecimalButtonClick={onDecimalButtonClick}\n        />\n      </Container>\n    </Container>\n  );\n};\n\nexport default App;\n","// eslint-disable-next-line no-use-before-define\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}